directive @userAuth(token: String) on FIELD_DEFINITION | ARGUMENT_DEFINITION | INPUT_FIELD_DEFINITION


type Query{
    login(username: String!, password: String!): LoginData!
    links(token:String!): [Link] @userAuth
    user(token:String! @eq): User @first
}


type Mutation{
    createCustomer(
        token:String!
        firstname: String!
        lastname:String
        age:Int
        addressText:String
        addressCoordinates:String
        phone:String
        gender:String
        maritalStatus:String
    ): Customer! @userAuth
    createLink(
        token:String!
        firstname:String
        lastname: String
        age: Int
        addressText: String
        addressCoordinates: String
        phone: String
        gender: String
        maritalStatus: String
        isEditable: Boolean
        lastEditAt: Int
        from: Int
        to: Int
    ): Link! @userAuth
    changeUser(
        token:String!
        avatar:String
        firstname:String
        lastname:String
        phone:String
        email:String
    ):User @userAuth
    changeLink(
        token: String!
        id: String!
        isChecked: Boolean
        delete: Boolean
    ): Link @userAuth
}

# --------------------- types -------------------------
type OrderItem{
    id:ID
    name:String
    price:String
    remindAt:Int
    details:String
    note:String
    created_at:String
}


type Order{
    id:ID
    customerId:ID
    customerName:String
    items:[OrderItem]
    updated_at:String
    created_at:String
    deleted_at:String
}

type Customer{
    id:ID
    marketerId: ID,
    marketerName: String
    firstname: String
    lastname:String
    age:Int
    addressText:String
    addressCoordinates:String
    phone:String
    gender:String
    maritalStatus:String
    orders:[Order]
    ordersId:String
    updated_at:String
    created_at:String
    deleted_at:String
}


type User{
    id:ID
    uid:Int
    avatar:String
    firstname:String
    lastname:String
    phone:String
    email:String
    rank:String
    upLine:String
    upLineId:String
    linksId:String
    subsetsId:String
    username:String
    updated_at:String
    created_at:String
    deleted_at:String
}

type Link{
    id:ID
    code:String
    creatorId:String
    creatorName:String
#    testResult:TestResult
    firstname:String
    lastname: String
    age: Int
    addressText: String
    addressCoordinates: String
    phone: String
    gender: String
    maritalStatus: String
    isEditable: Boolean
    isChecked:Boolean
    lastEditAt: Int
    from: Int
    to: Int
    created_at: String
    updated_at:String
}

type LoginData{
    token: String!
    firstname: String
    lastname: String
}
