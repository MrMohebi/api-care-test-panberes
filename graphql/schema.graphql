directive @userAuth(token: String) on FIELD_DEFINITION | ARGUMENT_DEFINITION | INPUT_FIELD_DEFINITION


type Query{
    login(username: String!, password: String!): LoginData!
    links(token:String!): [Link] @userAuth
    user(token:String! @eq): User @first
}

type User{
    id:ID
    uid:Int
    avatar:String
    firstname:String
    lastname:String
    phone:String
    email:String
    rank:String
    topLeader:String
    topLeaderId:String
    linksId:String
    subsetsId:String
    username:String
    updated_at:String
    created_at:String
    deleted_at:String
}

type Mutation{
    createLink(
        token:String!
        firstname:String
        lastname: String
        age: Int
        addressText: String
        addressCoordinates: String
        phone: String
        gender: String
        maritalStatus: String
        isEditable: Boolean
        lastEditAt: Int
        from: Int
        to: Int): Link! @userAuth

}


type Link{
    id:ID
    code:String
    creatorId:String
    creatorName:String
#    testResult:TestResult
    firstname:String
    lastname: String
    age: Int
    addressText: String
    addressCoordinates: String
    phone: String
    gender: String
    maritalStatus: String
    isEditable: Boolean
    lastEditAt: Int
    from: Int
    to: Int
}

type LoginData{
    token: String!
    firstname: String
    lastname: String
}
